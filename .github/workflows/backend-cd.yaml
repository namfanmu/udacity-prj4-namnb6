name: Backend Continuous Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  LINT:
    runs-on: ubuntu-latest
    environment: Devlopmnet Environment

    steps:
      - name: Check the Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Rependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pip install flake8

      - name: Run Lint
        run: cd starter/backend && pipenv run lint

  TEST:
    runs-on: ubuntu-latest

    steps:
      - name: Check the Repository
        uses: actions/checkout@v3

      - name: Use Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pip install flake8

      - name: Test
        run: cd starter/backend && pipenv install pytest && pipenv run test

  BUILD:
    needs: [LINT, TEST]
    runs-on: ubuntu-latest

    steps:
      - name: Check the Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1

      - name: Login to Amazon
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install Dependencies
        working-directory: starter/backend
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pip install flake8
          pip install flask
          pip install Flask-Cors

      - name: Build and Push image to ECR
        working-directory: starter/backend
        env:
          IMAGE_TAG: ${{ github.sha }}
          REPO_NAME: backend
        run: |
          TAG=$(echo $IMAGE_TAG | cut -c1-7)
          docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag 915666190922.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$TAG .
          docker push 915666190922.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$TAG

      - name: Update Kubeconfig
        run: aws eks update-kubeconfig --name prj4-cluster --region us-east-1

      - name: Deploy Docker Image to Amazon EKS
        run: aws eks update-kubeconfig --name prj4-cluster --region us-east-1
