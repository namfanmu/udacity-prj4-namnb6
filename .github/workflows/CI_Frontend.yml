name: CI Frontend Project 4

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  Linting:
    runs-on: ubuntu-latest
    environment: Development Environment

    steps:
      - name: Check the Repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      # - name: Install Dependencies
      #   working-directory: starter/frontend
      #   run: npm ci

      # - name: Checkout Run Lint
      #   run: cd starter/frontend && npm run lint

      - name: Print a message
        run: echo "Hello, world!"

  Test:
    runs-on: ubuntu-latest

    steps:
      - name: Check the Repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      # - name: Install Dependencies
      #   working-directory: starter/frontend
      #   run: npm ci

      # - name: Test
      #   run: cd starter/frontend && npm run test

      - name: Print a message
        run: echo "Hello, world!"

  Build:
    needs: [Linting, Test]
    runs-on: ubuntu-latest

    steps:
      - name: Check the Repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: 'npm'
          cache-dependency-path: starter/frontend/package-lock.json

      # - name: Build and Run Docker Image
      #   run: |
      #     cd starter/frontend
      #     docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
      #     docker run --name mp-frontend -p 3000:3000 -d mp-frontend

      - name: Print a message
        run: echo "Hello, world!"
